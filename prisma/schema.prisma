generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       String    @id @default(uuid())
  name     String
  slug     String
  imageUrl String    @map("image_url")
  products Product[]

  @@map("categories")
}

model Product {
  id                 String   @id @default(uuid())
  name               String
  slug               String
  description        String
  basePrice          Decimal  @map("base_price") @db.Decimal(8, 2)
  categoryId         String   @map("category_id")
  imagesUrl          String[] @map("images_url")
  discountPercentage Int      @default(0) @map("discount_percentage")
  category           Category @relation(fields: [categoryId], references: [id])

  @@map("products")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  providerAccountId String  @map("provider_account_id")
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
